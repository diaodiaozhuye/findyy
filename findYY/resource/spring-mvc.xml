<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.wc.findyy.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven />

	<mvc:default-servlet-handler />

	 <!-- 定义首页
	<mvc:view-controller path="/" view-name="redirect:/welcome" /> -->
	
    <!--  拦截器配置  
	<mvc:interceptors>
		 session超时 
		<mvc:interceptor>
			<mvc:mapping path="/*"/>
			<bean class="com.hnjh.interceptor.SessionTimeoutInterceptor">
				<property name="allowUrls">
					<list>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
      <!-- 系统初始化拦截
       <mvc:interceptor>  
        <mvc:mapping path="/"/>  
        <mvc:mapping path="/tologin"/>
        <mvc:mapping path="/logout"/>
        <bean class="com.hnjh.interceptor.InitInterceptor">  
        </bean>  
      </mvc:interceptor>  -->
      
      <!-- 拦截判断是否是SRCF攻击 
      <mvc:interceptor>  
        <mvc:mapping path="/sendEmail"/>  
        <mvc:mapping path="/updatePasswodByRandomCode"/>
        <mvc:mapping path="/quick/qvio"/>
        <mvc:mapping path="/reg/valcode"/>
        <mvc:mapping path="/reg/reg"/>
        <mvc:mapping path="/login"/>
        <bean class="com.hnjh.interceptor.SRCFInterceptor">  
        </bean>  
      </mvc:interceptor>-->
      <!-- 登录拦截判断平台是否打开
      <mvc:interceptor>  
        <mvc:mapping path="/*"/>  
        <bean class="com.hnjh.interceptor.SwitchInterceptor">  
        </bean>  
      </mvc:interceptor>  -->
       
      <!-- 微信接口查询拦截器 -->
         <!--<mvc:interceptor>  
        <mvc:mapping path="/weixin/qvio"/>  
        <bean class="com.hnjh.interceptor.WeixinInterceptor">  
        </bean>  
      </mvc:interceptor>-->
      <!-- 防止表单数据重复提交拦截器 
      <mvc:interceptor>
      	<mvc:mapping path="/tologin"/> 
      	<mvc:mapping path="/login"/> 
      	<mvc:mapping path="/reg/reg"/>
      	<mvc:mapping path="/reg/toreg"/>
      	<mvc:mapping path="/quick/topay"/>
      	<mvc:mapping path="/unionPay"/>
      	<mvc:mapping path="/qviolations"/>
      	<mvc:mapping path="/qonevio"/>
      	<mvc:mapping path="/home"/>
      	<mvc:mapping path="/logout"/>
      	<mvc:mapping path="/"/>
      	<bean class="com.hnjh.interceptor.TokenInterceptor">  
        </bean>
      </mvc:interceptor>-->
    
    
    <!-- 自定义异常处理，SimpleMappingExceptionResolver这个类可以是个空类，但是要写，方便在java代码里面使用 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
      <property name="exceptionMappings">  
        <props>
          <prop key="com.hnjh.exception.SessionTimeoutException">redirect:/help/timeout</prop>
          <prop key="com.hnjh.exception.RepeatLoginException">redirect:/help/relogin</prop>
          <prop key="com.hnjh.exception.SwitchException">redirect:/help/close</prop>
          <prop key="com.hnjh.exception.CommonException">redirect:/404</prop>
        </props>  
      </property>  
    </bean>
    
    <!-- 统一捕获异常
    <bean id="exceptionHandler" class="com.hnjh.exception.ExceptionHandler"></bean> -->

	<!-- 定义JSP -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/content/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>